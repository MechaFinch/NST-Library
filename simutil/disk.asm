
;
; STANRDARD LIBRARY - SIM UTIL
; DISK
;

%libname disk

%define DISKBUFFER_CONTROLLER_ORIGIN 	0xF006_0000
%define DISKBUFFER_CONTROLLER_RW_OFFS	0x00
%define DISKBUFFER_CONTROLLER_FN_OFFS	0x02
%define DISKBUFFER_CONTROLLER_SN_OFFS	0x04
%define DISKBUFFER_CONTROLLER_BP_OFFS	0x08

; read(ptr buffer, u16 file, u16 sector): none
; Reads a sector into the buffer
read:
	PUSH BP
	MOVW BP, SP
	
	MOVW D:A, DISKBUFFER_CONTROLLER_ORIGIN
	MOVW B:C, [BP + 8]
	MOVW [D:A + DISKBUFFER_CONTROLLER_BP_OFFS], B:C
	MOVW B:C, [BP + 12]
	MOV [D:A + DISKBUFFER_CONTROLLER_FN_OFFS], C
	MOV [D:A + DISKBUFFER_CONTROLLER_SN_OFFS], B
	
.r:
	MOV AL, [D:A + DISKBUFFER_CONTROLLER_RW_OFFS]
	
	POP BP
	RET

; write(ptr buffer, u16 file, u16
write:
	PUSH BP
	MOVW BP, SP
	
	MOVW D:A, DISKBUFFER_CONTROLLER_ORIGIN
	MOVW B:C, [BP + 8]
	MOVW [D:A + DISKBUFFER_CONTROLLER_BP_OFFS], B:C
	MOVW B:C, [BP + 12]
	MOV [D:A + DISKBUFFER_CONTROLLER_FN_OFFS], C
	MOV [D:A + DISKBUFFER_CONTROLLER_SN_OFFS], B
	
.w:
	MOV [D:A + DISKBUFFER_CONTROLLER_RW_OFFS], AL
	
	POP BP
	RET
